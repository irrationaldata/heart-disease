## Setup ----
library(dplyr,warn.conflicts = FALSE)
library(randomForest)

## Data Input and Cleanup ----
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
data <- read.csv(url,header=F)
colnames(data) <- c("age","sex","cp","trestbps","chol","fbs","restecg",
                    "thalach","exang","oldpeak","slope","ca","thal","hd")
data[data=='?'] <- NA
data[data$sex==0,]$sex <- "F"
data[data$sex==1,]$sex <- "M"
data$sex <- as.factor(data$sex)
data$cp <- as.factor(data$cp)
data$fbs <- as.factor(data$fbs)
data$restecg <- as.factor(data$restecg)
data$exang <- as.factor(data$exang)
data$slope <- as.factor(data$slope)
data$ca <- as.integer(data$ca)
data$ca <- as.factor(data$ca)
data$thal <- as.integer(data$thal)
data$thal <- as.factor(data$thal)
data$hd <- ifelse(test=data$hd==0,yes="Healthy",no="Unhealthy")
data$hd <- as.factor(data$hd)

## RandomForest Run ----
set.seed(520)
# hd~. is what we want to predict, impute is the mean of missing values,
# iter states "how many forests should I build?"
# OOB == out of bag
data_imputed <- rfImpute(hd~.,data=data,iter=200)
model <- randomForest(hd~.,data=data_imputed,proximity=T)
model
model$err.rate
# ^^ OOB, then how many of each were misclassified...

## Plot Model ----
plot(model)
